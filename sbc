#!/bin/bash

# Copyright 2012 √Ålvaro Justen
#
# This program is free software: you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation; version 3 dated June, 2007.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along with
# this program. If not, see <http://www.gnu.org/licenses/>.

SBC=$0
SBC_PATH="$HOME/.sbc"
SBC_KEY="$HOME/.ssh/sbc_rsa"
AUTH_KEYS="$HOME/.ssh/authorized_keys"
SBC_PORT=$(($RANDOM + 1024))
SSH_LOCAL_PORT=22

sbc_install() {
    if [ -z "$1" ]; then
        echo "Usage: $0 $plugin <user@server> [scp options]"
        exit 1
    fi

    if [ ! -e "$SBC_KEY" ]; then
        echo -n "[sbc] Generating SSH RSA key without password ($SBC_KEY)..."
        ssh-keygen -t rsa -f $SBC_KEY -N '' &> /dev/null
        echo ' [OK]'
    else
        echo "[sbc] Using existing key $SBC_KEY"
    fi

    cat > /tmp/sbc-install << 'EOF'
#!/bin/bash

mkdir -p $HOME/.sbc $HOME/bin
mv $HOME/sbc_rsa $HOME/sbc $HOME/sbc-startup $HOME/.sbc/
rm -rf $HOME/bin/sbc
ln -s $HOME/.sbc/sbc $HOME/bin/
chmod 700 $HOME/.sbc
chmod 600 $HOME/.sbc/sbc_rsa
chmod +x $HOME/.sbc/sbc
chmod +x $HOME/.sbc/sbc-startup

line_to_add='PATH=$PATH:$HOME/bin'
[ -z "$(grep $line_to_add $HOME/.profile)" ] && echo $line_to_add >> $HOME/.profile

rm $0
EOF
    cat > /tmp/sbc-startup << 'EOF'
#!/bin/bash

source $HOME/.sbc/config

SBC_CMD="ssh -qNf -p $SBC_PORT -o StrictHostKeyChecking=no \
             -o ControlMaster=auto -o ControlPath=$HOME/.sbc/master_%h_%p_%r \
             -i $HOME/.ssh/sbc_rsa $SBC_USER@localhost"
$SBC_CMD
SBC_PID=$(ps -Ao pid,cmd | grep "$(echo $SBC_CMD)" | awk '($2 != "grep") {print $1}')
echo ' [OK]'

$SHELL

echo -n '[sbc] Cleaning metadata on server...'
rm $HOME/.sbc/config
echo ' [OK]'
kill -9 $SBC_PID
EOF

    echo -n "[sbc] Copying private key and sbc executables to remote server..."
    cat $SBC_KEY | ssh $@ 'cat - > $HOME/sbc_rsa'
    cat $0 | ssh $@ 'cat - > $HOME/sbc'
    cat /tmp/sbc-install | ssh $@ 'cat - > $HOME/sbc-install'
    cat /tmp/sbc-startup | ssh $@ 'cat - > $HOME/sbc-startup'
    rm /tmp/sbc-install /tmp/sbc-startup
    echo ' [OK]'
    echo -n "[sbc] Executing sbc-install..."
    ssh $@ '/bin/bash $HOME/sbc-install'
    echo ' [OK]'

    echo -n "[sbc] Updating local authorized_keys (if needed)..."
    if [ "$(grep "$(cat $SBC_KEY.pub)" $AUTH_KEYS | wc -l)" = 0 ]; then
        cat $SBC_KEY.pub >> $AUTH_KEYS
    fi
    echo ' [OK]'
}

update_environment() {
    # Environment magic: copy environment from the process which executed sbc
    # in client, so the plugin will be executed in the same environment
    source <(xargs --null --max-args=1 echo < /proc/$PID_ENV/environ | tr '\0' '\n' | sed 's/^/export /; s/=/="/; s/$/"/')
}

if [ -z "$1" ]; then
    echo "Usage: $0 <plugin_name> [--help] [options]"
    exit 1
fi

plugin=$1
shift

case "$plugin" in
    install)
        sbc_install $@
        ;;
    ssh)
        # Running on client to start SSH connection
        echo -n '[sbc] Copying sbc metadata to server...'
        cat << EOF | ssh $@ "cat - > \$HOME/.sbc/config"
PID_ENV=$$
SBC_PORT=$SBC_PORT
SBC_USER=$USER
EOF
echo ' [OK]'

echo -n '[sbc] Creating back-channel and connecting...'
ssh -tR 127.0.0.1:$SBC_PORT:127.0.0.1:$SSH_LOCAL_PORT $@ '$HOME/.sbc/sbc-startup'

    ;;
    exec)
        # Running on client
        plugin=$1
        shift
        update_environment
        # Run the plugin
        $SBC_PATH/plugins/$plugin $@
    ;;
    *)
        # Running a plugin on remote
        source $HOME/.sbc/config
        HOST_PORT=${SSH_CONNECTION#* * }
        PORT=${HOST_PORT//* /}
        HOST=${HOST_PORT/% */}

        ssh -q -t -p $SBC_PORT -o StrictHostKeyChecking=no $SBC_USER@localhost \
            -i $HOME/.sbc/sbc_rsa \
            -o ControlMaster=auto -o ControlPath=$HOME/.sbc/master_%h_%p_%r \
            "REMOTE_PWD=$PWD REMOTE_USER=$USER \
            REMOTE_HOSTNAME=$HOSTNAME REMOTE_HOST=$HOST REMOTE_PORT=$PORT \
            PID_ENV=$PID_ENV /bin/bash -lc \"sbc exec $plugin $@\""
    ;;
esac
